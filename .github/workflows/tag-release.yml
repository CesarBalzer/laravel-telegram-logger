name: Tag and Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Calculate new version
        id: version
        run: |
          # Obtém a última tag pela data de criação (não pelo commit base)
          CURRENT_VERSION=$(git tag --sort=-creatordate | head -n 1)
          if [ -z "$CURRENT_VERSION" ]; then
            CURRENT_VERSION="v1.0.0"
          fi
          
          echo "Última versão: $CURRENT_VERSION"

          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1 | tr -d 'v')
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)

          PATCH=$((PATCH+1))
          NEW_VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          echo "Nova versão: $NEW_VERSION"

          echo "new_tag=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Create Git tag
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git tag ${{ steps.version.outputs.new_tag }}
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
          git push origin ${{ steps.version.outputs.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          name: Release ${{ steps.version.outputs.new_tag }}
          body: |
            ✅ Nova versão publicada automaticamente.

            Mudanças principais desde o último release:

            - Log para Telegram melhorado
            - Exemplo de uso com rota de erro
            - Configuração `.env` documentada
            - Suporte a instalação via Composer + Packagist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
